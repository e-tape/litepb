{{- define "field_unmarshal_map" -}}
    {{- /* for micro acceleration, we can not initiate the valueLength variable, but just skip the message length */ -}}
    {{- $c := . -}}
    {{- $valueLength := (printf "%sLength" .valueName) -}}
    {{- template "field_unmarshal_int" kv
    "type" .type
    "endName" .endName
    "errorUnexpectedEnd" .errorUnexpectedEndLength
    "valueName" $valueLength
    "valueCreate" true
    "valueTypeName" "int"
    "rangeItems" (arr 0 7 14 21 28)
    -}}
    if len(data) < index + {{ $valueLength }} { return {{ .errorUnexpectedEndValue }} }

    if a.{{ .field.GetName }} == nil { // TODO rathil or cap(a.{{ .field.GetName }}) == 0 ???
    a.{{ .field.GetName }} = make({{ template "field_type_name" kv "type" .type "format" "<pointer><path><name>" }}, 1)
    }

    var mapKey {{ template "field_type_name" kv "type" .type.GetMap.GetKey "format" "<name>" }}
    var mapValue {{ template "field_type_name" kv "type" .type.GetMap.GetValue "format" "<pointer><path><name>" }}

    for kv := 0; kv < 2; kv++ {
    {{ template "field_unmarshal_int" kv
    "type" .type
    "endName" (printf "endKV%d" .number)
    "errorUnexpectedEnd" (render "error_unexpected_end_of_field_number_kv" .fieldName)
    "valueName" "kvNum"
    "valueCreate" true
    "valueTypeName" "int"
    "rangeItems" (arr 0 7 14 21)
    }}
    switch kvNum >> 3 {
    {{- $paramKey := kv
    "type" .type.GetMap.GetKey
    "valueName" "mapKey"
    "valueCreate" false
    "endName" (printf "endK%d" .number)
    "fieldName" $c.fieldName
    "errorUnexpectedEndLength" (render "error_unexpected_end_of_field_length_kv" $c.fieldName)
    "errorUnexpectedEndValue" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    "errorUnexpectedEnd" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    -}}
    {{- $paramValue := kv
    "type" .type.GetMap.GetValue
    "valueName" "mapValue"
    "valueCreate" false
    "endName" (printf "endV%d" .number)
    "fieldName" $c.fieldName
    "errorUnexpectedEndLength" (render "error_unexpected_end_of_field_length_kv" $c.fieldName)
    "errorUnexpectedEndValue" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    "errorUnexpectedEnd" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    }}
    case 1:
    switch kvNum & 7 {
    {{ template "field_unmarshal_map_nested" $paramKey -}}
    default:
    return {{ template "error_incorrect_wire_type_kv" kv "fieldName" $c.fieldName "fieldNum" "kvNum" "mapName" "key" }}
    }
    case 2:
    switch kvNum & 7 {
    {{ template "field_unmarshal_map_nested" $paramValue -}}
    default:
    return {{ template "error_incorrect_wire_type_kv" kv "fieldName" $c.fieldName "fieldNum" "kvNum" "mapName" "value" }}
    }
    }
    }
    a.{{ .field.GetName }}[{{ get_result $paramKey }}] = {{ get_result $paramValue }}
    // index += {{ $valueLength }} - TODO rathil: so we can skip the unknown fields ???
{{- end -}}