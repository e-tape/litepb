{{- define "field_unmarshal_map" -}}
    {{- /* for micro acceleration, we can not initiate the valueLength variable, but just skip the message length */ -}}
    {{- $c := . -}}
    {{- $valueLength := (printf "%sLength" .valueName) -}}
    {{ template "field_unmarshal_int" kv
    "type" .type
    "endName" .endName
    "errorUnexpectedEnd" .errorUnexpectedEndLength
    "valueName" $valueLength
    "valueCreate" true
    "valueTypeName" "int"
    "rangeItems" (arr 0 7 14 21 28)
    }}
    if len(data) < index + {{ $valueLength }} { return {{ .errorUnexpectedEndValue }} }

    var mapKey {{ template "type_name" kv "type" .type.GetMap.GetKey }}
    var mapValue {{ template "type_name" kv "type" .type.GetMap.GetValue }}
    mapEnd := index + {{ $valueLength }}

    for index < mapEnd {
    {{ template "field_unmarshal_int" kv
    "type" .type
    "endName" (printf "endKV%d" .number)
    "errorUnexpectedEnd" (render "error_unexpected_end_of_field_number_kv" .fieldName)
    "valueName" "kvNum"
    "valueCreate" true
    "valueTypeName" "int"
    "rangeItems" (arr 0 7 14 21)
    }}
    switch kvNum >> 3 {
    {{ $paramKey := kv
    "type" .type.GetMap.GetKey
    "valueName" "mapKey"
    "valueCreate" false
    "endName" (printf "endK%d" .number)
    "fieldName" $c.fieldName
    "errorUnexpectedEndLength" (render "error_unexpected_end_of_field_length_kv" $c.fieldName)
    "errorUnexpectedEndValue" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    "errorUnexpectedEnd" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    -}}
    {{ $paramValue := kv
    "type" .type.GetMap.GetValue
    "valueName" "mapValue"
    "valueCreate" false
    "endName" (printf "endV%d" .number)
    "fieldName" $c.fieldName
    "errorUnexpectedEndLength" (render "error_unexpected_end_of_field_length_kv" $c.fieldName)
    "errorUnexpectedEndValue" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    "errorUnexpectedEnd" (render "error_unexpected_end_of_field_value_kv" $c.fieldName)
    -}}
    case 1:
    switch kvNum & 7 {
    {{ template "field_unmarshal_map_nested" $paramKey -}}
    default:
    return {{ template "error_incorrect_wire_type_kv" kv "fieldName" $c.fieldName "fieldNum" "kvNum" "mapName" "key" }}
    }
    case 2:
    switch kvNum & 7 {
    {{ template "field_unmarshal_map_nested" $paramValue -}}
    default:
    return {{ template "error_incorrect_wire_type_kv" kv "fieldName" $c.fieldName "fieldNum" "kvNum" "mapName" "value" }}
    }
    }
    }
    if a.{{ .field.GetName }} == nil {
    {{ if and (is_msg .type.GetMap.GetValue) (not (render "type_is_custom" .type.GetMap.GetValue)) -}}
        a.{{ .field.GetName }} = {{- template "field_type_path" .type -}}
        {{ template "func_name_map_new" .type.GetMap.GetValue.GetReflect -}}
        [{{ template "type_name" kv "type" .type.GetMap.GetKey }}](1)
    {{ else -}}
        a.{{ .field.GetName }} = make({{ template "type_name" kv "type" .type }}, 1)
    {{ end -}}
    }
    a.{{ .field.GetName }}[{{ get_result $paramKey }}] = {{ get_result $paramValue }}
    // TODO rathil what to do if the value or key never arrived????
{{- end -}}