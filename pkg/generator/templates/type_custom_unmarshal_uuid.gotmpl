{{- define "type_custom_unmarshal_uuid" -}}
    {{ if .c.valueCreate -}}
        var {{ .c.valueName }} {{ import "github.com/google/uuid" "uuid" -}}.UUID
    {{ end -}}
    if data[index] == (1<<3)+2 && data[index+1] < 128 { // TODO rathil replace (1<<3)+2 to const calc field uuid.Value number + wire type
    switch data[index+1] {
    case 16:
    {{ .c.valueName }} = {{- import "github.com/google/uuid" "uuid" -}}.UUID(data[index+2 : index+2+int(data[index+1])])
    default:
    var err error
    if {{ .c.valueName }}, err = uuid.ParseBytes(data[index+2 : index+2+int(data[index+1])]); err != nil {
    return {{ template "error_unmarshal_custom_type_uuid" kv "field" .c.fieldName "err" "err" }}
    }
    }
    index += {{ .valueLength }}
    }else{
    index += {{ .valueLength }}
    // TODO rathil fallback for skip unknown fields
    }
{{- end -}}