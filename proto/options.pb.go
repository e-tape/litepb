// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.1
// source: options.proto

package litepb

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Activity int32

const (
	Activity_Active   Activity = 0
	Activity_Inactive Activity = 1
)

// Enum value maps for Activity.
var (
	Activity_name = map[int32]string{
		0: "Active",
		1: "Inactive",
	}
	Activity_value = map[string]int32{
		"Active":   0,
		"Inactive": 1,
	}
)

func (x Activity) Enum() *Activity {
	p := new(Activity)
	*p = x
	return p
}

func (x Activity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Activity) Descriptor() protoreflect.EnumDescriptor {
	return file_options_proto_enumTypes[0].Descriptor()
}

func (Activity) Type() protoreflect.EnumType {
	return &file_options_proto_enumTypes[0]
}

func (x Activity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Activity) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Activity(num)
	return nil
}

// Deprecated: Use Activity.Descriptor instead.
func (Activity) EnumDescriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{0}
}

var file_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15998,
		Name:          "litepb.mem_pool_message_all",
		Tag:           "varint,15998,opt,name=mem_pool_message_all,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15997,
		Name:          "litepb.mem_pool_list_all",
		Tag:           "varint,15997,opt,name=mem_pool_list_all,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15996,
		Name:          "litepb.mem_pool_map_all",
		Tag:           "varint,15996,opt,name=mem_pool_map_all,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15995,
		Name:          "litepb.mem_pool_oneof_all",
		Tag:           "varint,15995,opt,name=mem_pool_oneof_all,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         15999,
		Name:          "litepb.slice_packed_number",
		Tag:           "varint,15999,opt,name=slice_packed_number",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15998,
		Name:          "litepb.mem_pool_message",
		Tag:           "varint,15998,opt,name=mem_pool_message,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15997,
		Name:          "litepb.mem_pool_list",
		Tag:           "varint,15997,opt,name=mem_pool_list,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15996,
		Name:          "litepb.mem_pool_map",
		Tag:           "varint,15996,opt,name=mem_pool_map,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*Activity)(nil),
		Field:         15995,
		Name:          "litepb.mem_pool_oneof",
		Tag:           "varint,15995,opt,name=mem_pool_oneof,enum=litepb.Activity",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         15999,
		Name:          "litepb.array_fixed_size",
		Tag:           "varint,15999,opt,name=array_fixed_size",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         15998,
		Name:          "litepb.type",
		Tag:           "bytes,15998,opt,name=type",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         15997,
		Name:          "litepb.json_tag",
		Tag:           "bytes,15997,opt,name=json_tag",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         15996,
		Name:          "litepb.additional_tags",
		Tag:           "bytes,15996,opt,name=additional_tags",
		Filename:      "options.proto",
	},
}

// Extension fields to descriptor.FileOptions.
var (
	// Pool objects activity for all messages in this file
	//
	// optional litepb.Activity mem_pool_message_all = 15998;
	E_MemPoolMessageAll = &file_options_proto_extTypes[0]
	// Pool objects activity for all messages list in this file
	//
	// optional litepb.Activity mem_pool_list_all = 15997;
	E_MemPoolListAll = &file_options_proto_extTypes[1]
	// Pool objects activity for all messages map in this file
	//
	// optional litepb.Activity mem_pool_map_all = 15996;
	E_MemPoolMapAll = &file_options_proto_extTypes[2]
	// Pool objects activity for all messages oneof in this file
	//
	// optional litepb.Activity mem_pool_oneof_all = 15995;
	E_MemPoolOneofAll = &file_options_proto_extTypes[3]
)

// Extension fields to descriptor.MessageOptions.
var (
	// Field number to be added to the message to transfer the length of all repeating fields. Default: 15999
	//
	// optional int32 slice_packed_number = 15999;
	E_SlicePackedNumber = &file_options_proto_extTypes[4]
	// Pool objects activity for message (has priority over options from FileOptions)
	//
	// optional litepb.Activity mem_pool_message = 15998;
	E_MemPoolMessage = &file_options_proto_extTypes[5]
	// Pool objects activity for message list (has priority over options from FileOptions)
	//
	// optional litepb.Activity mem_pool_list = 15997;
	E_MemPoolList = &file_options_proto_extTypes[6]
	// Pool objects activity for message map (has priority over options from FileOptions)
	//
	// optional litepb.Activity mem_pool_map = 15996;
	E_MemPoolMap = &file_options_proto_extTypes[7]
	// Pool objects activity for message oneof (has priority over options from FileOptions)
	//
	// optional litepb.Activity mem_pool_oneof = 15995;
	E_MemPoolOneof = &file_options_proto_extTypes[8]
)

// Extension fields to descriptor.FieldOptions.
var (
	// Transforming a slice into a fixed-length array
	//
	// optional int32 array_fixed_size = 15999;
	E_ArrayFixedSize = &file_options_proto_extTypes[9]
	// Change the declared type in the protobuf to your personal type
	//
	// optional string type = 15998;
	E_Type = &file_options_proto_extTypes[10]
	// Field name when marshal to JSON
	//
	// optional string json_tag = 15997;
	E_JsonTag = &file_options_proto_extTypes[11]
	// Additional tags
	//
	// optional string additional_tags = 15996;
	E_AdditionalTags = &file_options_proto_extTypes[12]
)

var File_options_proto protoreflect.FileDescriptor

var file_options_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x24, 0x0a, 0x08, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x3a,
	0x60, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfe, 0x7c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c,
	0x69, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x11,
	0x6d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6c,
	0x6c, 0x3a, 0x5a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfd, 0x7c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c, 0x69,
	0x74, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x6d,
	0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x3a, 0x58, 0x0a,
	0x10, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6c,
	0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xfc, 0x7c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x50, 0x6f, 0x6f,
	0x6c, 0x4d, 0x61, 0x70, 0x41, 0x6c, 0x6c, 0x3a, 0x5c, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfb, 0x7c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x41, 0x6c, 0x6c, 0x3a, 0x50, 0x0a, 0x13, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xff, 0x7c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x5c, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfe, 0x7c, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x56, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfd, 0x7c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x54, 0x0a,
	0x0c, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfc,
	0x7c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c,
	0x4d, 0x61, 0x70, 0x3a, 0x58, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfb, 0x7c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x0c, 0x6d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x3a, 0x48, 0x0a,
	0x10, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xff, 0x7c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x3a, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfe,
	0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x39, 0x0a, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfd, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a,
	0x73, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x3a, 0x47, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfc, 0x7c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x42,
	0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x2d,
	0x74, 0x61, 0x70, 0x65, 0x2f, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62,
}

var (
	file_options_proto_rawDescOnce sync.Once
	file_options_proto_rawDescData = file_options_proto_rawDesc
)

func file_options_proto_rawDescGZIP() []byte {
	file_options_proto_rawDescOnce.Do(func() {
		file_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_options_proto_rawDescData)
	})
	return file_options_proto_rawDescData
}

var file_options_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_options_proto_goTypes = []interface{}{
	(Activity)(0),                     // 0: litepb.Activity
	(*descriptor.FileOptions)(nil),    // 1: google.protobuf.FileOptions
	(*descriptor.MessageOptions)(nil), // 2: google.protobuf.MessageOptions
	(*descriptor.FieldOptions)(nil),   // 3: google.protobuf.FieldOptions
}
var file_options_proto_depIdxs = []int32{
	1,  // 0: litepb.mem_pool_message_all:extendee -> google.protobuf.FileOptions
	1,  // 1: litepb.mem_pool_list_all:extendee -> google.protobuf.FileOptions
	1,  // 2: litepb.mem_pool_map_all:extendee -> google.protobuf.FileOptions
	1,  // 3: litepb.mem_pool_oneof_all:extendee -> google.protobuf.FileOptions
	2,  // 4: litepb.slice_packed_number:extendee -> google.protobuf.MessageOptions
	2,  // 5: litepb.mem_pool_message:extendee -> google.protobuf.MessageOptions
	2,  // 6: litepb.mem_pool_list:extendee -> google.protobuf.MessageOptions
	2,  // 7: litepb.mem_pool_map:extendee -> google.protobuf.MessageOptions
	2,  // 8: litepb.mem_pool_oneof:extendee -> google.protobuf.MessageOptions
	3,  // 9: litepb.array_fixed_size:extendee -> google.protobuf.FieldOptions
	3,  // 10: litepb.type:extendee -> google.protobuf.FieldOptions
	3,  // 11: litepb.json_tag:extendee -> google.protobuf.FieldOptions
	3,  // 12: litepb.additional_tags:extendee -> google.protobuf.FieldOptions
	0,  // 13: litepb.mem_pool_message_all:type_name -> litepb.Activity
	0,  // 14: litepb.mem_pool_list_all:type_name -> litepb.Activity
	0,  // 15: litepb.mem_pool_map_all:type_name -> litepb.Activity
	0,  // 16: litepb.mem_pool_oneof_all:type_name -> litepb.Activity
	0,  // 17: litepb.mem_pool_message:type_name -> litepb.Activity
	0,  // 18: litepb.mem_pool_list:type_name -> litepb.Activity
	0,  // 19: litepb.mem_pool_map:type_name -> litepb.Activity
	0,  // 20: litepb.mem_pool_oneof:type_name -> litepb.Activity
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	13, // [13:21] is the sub-list for extension type_name
	0,  // [0:13] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_options_proto_init() }
func file_options_proto_init() {
	if File_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_options_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 13,
			NumServices:   0,
		},
		GoTypes:           file_options_proto_goTypes,
		DependencyIndexes: file_options_proto_depIdxs,
		EnumInfos:         file_options_proto_enumTypes,
		ExtensionInfos:    file_options_proto_extTypes,
	}.Build()
	File_options_proto = out.File
	file_options_proto_rawDesc = nil
	file_options_proto_goTypes = nil
	file_options_proto_depIdxs = nil
}
